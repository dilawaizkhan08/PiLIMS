# Generated by Django 4.2.21 on 2025-09-07 16:24

import app.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('idle_time', models.DurationField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('User', 'User')], default='User', max_length=20)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('alias_name', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Text', 'Text'), ('Numeric', 'Numeric'), ('List', 'List')], max_length=50)),
                ('spec_limits', models.JSONField(blank=True, default=list, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('optional', models.BooleanField(default=False)),
                ('calculated', models.BooleanField(default=False)),
                ('minimum', models.FloatField(blank=True, null=True)),
                ('maximum', models.FloatField(blank=True, null=True)),
                ('rounding', models.IntegerField(blank=True, null=True)),
                ('decimal_places', models.IntegerField(blank=True, null=True)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='app.analysis')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile', models.CharField(max_length=20)),
                ('company_name', models.CharField(max_length=255)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('variables', models.JSONField()),
                ('script', models.TextField()),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DynamicFormEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('data', models.JSONField()),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('received', 'Received'), ('completed', 'Completed'), ('authorized', 'Authorized'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('restored', 'Restored')], default='initiated', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('vendor', models.CharField(max_length=255)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('serial_no', models.CharField(blank=True, max_length=255, null=True)),
                ('model_no', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('calibration_period', models.IntegerField(blank=True, null=True)),
                ('next_calibration_date', models.DateField(blank=True, null=True)),
                ('prevention_period', models.IntegerField(blank=True, null=True)),
                ('next_prevention_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('location', models.CharField(max_length=255)),
                ('total_quantity', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('analyses_list', 'Analyses List'), ('sample_form_field', 'Sample Form Field'), ('component', 'Component'), ('request_form_field', 'Request Form Field'), ('mail_list', 'Mail List')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('version', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('value', models.CharField(max_length=255)),
                ('list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='app.list')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('users', models.ManyToManyField(blank=True, related_name='user_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('symbol', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('user_groups', models.ManyToManyField(blank=True, related_name='units', to='app.usergroup')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('user_groups', models.ManyToManyField(blank=True, related_name='test_methods', to='app.usergroup')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('stock_date', models.DateField(blank=True, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('quantity', models.IntegerField()),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='app.inventory')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('sample_name', models.CharField(max_length=255)),
                ('version', models.IntegerField(default=1)),
                ('description', models.TextField(blank=True, null=True)),
                ('group_analysis_list', models.ManyToManyField(blank=True, related_name='sample_forms', to='app.analysis')),
                ('user_groups', models.ManyToManyField(blank=True, related_name='sample_forms', to='app.usergroup')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SampleField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('field_name', models.CharField(max_length=255)),
                ('field_property', models.CharField(choices=[('text', 'Text'), ('numeric', 'Numeric'), ('date_time', 'Date & Time'), ('list', 'List'), ('link_to_table', 'Link to Table'), ('attachment', 'Attachment')], max_length=50)),
                ('link_to_table', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.IntegerField(default=0)),
                ('required', models.BooleanField(default=False)),
                ('list_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.list')),
                ('sample_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='app.sampleform')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('users', models.ManyToManyField(blank=True, related_name='roles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('request_name', models.CharField(max_length=255)),
                ('version', models.IntegerField(default=1)),
                ('request_type', models.CharField(choices=[('urgent', 'Urgent'), ('normal', 'Normal'), ('internal', 'Internal'), ('external', 'External')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('customer_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='app.customer')),
                ('sample_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_forms', to='app.sampleform')),
                ('user_groups', models.ManyToManyField(related_name='request_forms', to='app.usergroup')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RequestField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('field_name', models.CharField(max_length=255)),
                ('field_property', models.CharField(choices=[('text', 'Text'), ('numeric', 'Numeric'), ('date_time', 'Date & Time'), ('list', 'List'), ('link_to_table', 'Link to Table'), ('attachment', 'Attachment')], max_length=50)),
                ('link_to_table', models.CharField(blank=True, max_length=255, null=True)),
                ('order', models.IntegerField(default=0)),
                ('required', models.BooleanField(default=False)),
                ('list_ref', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.list')),
                ('request_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='app.requestform')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.analysis')),
                ('components', models.ManyToManyField(blank=True, to='app.component')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.product')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='analyses',
            field=models.ManyToManyField(through='app.ProductAnalysis', to='app.analysis'),
        ),
        migrations.AddField(
            model_name='product',
            name='user_groups',
            field=models.ManyToManyField(blank=True, null=True, to='app.usergroup'),
        ),
        migrations.AddField(
            model_name='list',
            name='user_groups',
            field=models.ManyToManyField(blank=True, to='app.usergroup'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.unit'),
        ),
        migrations.AddField(
            model_name='inventory',
            name='user_groups',
            field=models.ManyToManyField(blank=True, null=True, to='app.usergroup'),
        ),
        migrations.CreateModel(
            name='InstrumentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('action_type', models.CharField(choices=[('Calibration', 'Calibration'), ('Prevention', 'Prevention')], max_length=100)),
                ('start_date', models.DateField()),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='app.instrument')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='instrument',
            name='user_groups',
            field=models.ManyToManyField(blank=True, null=True, related_name='instruments_as_user_group', to='app.usergroup'),
        ),
        migrations.CreateModel(
            name='DynamicRequestEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('initiated', 'Initiated'), ('received', 'Received'), ('completed', 'Completed'), ('authorized', 'Authorized'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('restored', 'Restored')], default='initiated', max_length=20)),
                ('analyses', models.ManyToManyField(blank=True, related_name='requests_entries', to='app.analysis')),
                ('analyst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyzed_request', to=settings.AUTH_USER_MODEL)),
                ('logged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logged_request', to=settings.AUTH_USER_MODEL)),
                ('request_form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.requestform')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DynamicRequestAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/request/')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='app.dynamicrequestentry')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.requestfield')),
            ],
        ),
        migrations.CreateModel(
            name='DynamicFormEntryAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.analysis')),
                ('components', models.ManyToManyField(blank=True, to='app.component')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.dynamicformentry')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dynamicformentry',
            name='analyses',
            field=models.ManyToManyField(blank=True, related_name='entries', through='app.DynamicFormEntryAnalysis', to='app.analysis'),
        ),
        migrations.AddField(
            model_name='dynamicformentry',
            name='analyst',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analyzed_samples', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='dynamicformentry',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.sampleform'),
        ),
        migrations.AddField(
            model_name='dynamicformentry',
            name='logged_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logged_samples', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DynamicFormAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=app.models.attachment_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='app.dynamicformentry')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.samplefield')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, null=True)),
                ('numeric_value', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='app.component')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='app.dynamicformentry')),
            ],
        ),
        migrations.AddField(
            model_name='component',
            name='custom_function',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='components', to='app.customfunction'),
        ),
        migrations.AddField(
            model_name='component',
            name='listname',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='components', to='app.list'),
        ),
        migrations.AddField(
            model_name='component',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='components', to='app.unit'),
        ),
        migrations.CreateModel(
            name='AnalysisAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('file', models.FileField(upload_to='analysis_attachments/')),
                ('analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='app.analysis')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='analysis',
            name='test_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.testmethod'),
        ),
        migrations.AddField(
            model_name='analysis',
            name='user_groups',
            field=models.ManyToManyField(blank=True, null=True, to='app.usergroup'),
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module', models.CharField(max_length=200)),
                ('action', models.CharField(choices=[('create', 'Create'), ('view', 'View'), ('update', 'Update'), ('delete', 'Delete')], max_length=10)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='app.role')),
            ],
            options={
                'unique_together': {('role', 'module', 'action')},
            },
        ),
    ]
